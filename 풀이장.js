const chicken = 1999;

const solution = chicken => {
let 미사용쿠폰 = 0;
let 신규생성쿠폰 = 0;

미사용쿠폰 += chicken%10 // 10으로 나눈 나머지 미사용으로 빼둠
chicken = Math.floor(chicken/10); // 최초 10으로 나눔;
신규생성쿠폰 += chicken
while(chicken>=10){ // chicken이 여전히 10 이상이면 반복
    미사용쿠폰 += chicken%10 
    chicken = Math.floor(chicken/10);
    신규생성쿠폰 += chicken
}

while(미사용쿠폰>=10){ // 이번엔 쌓인 미사용쿠폰이 10이상이라면 반복
    신규생성쿠폰 += Math.floor(미사용쿠폰/10); // 신규생성된 쿠폰을 저장하고
    미사용쿠폰 = 미사용쿠폰%10 // 사용하지 못한 쿠폰은 다시 저장하고
}
console.log('chicken: ', chicken);
console.log('미사용쿠폰: ', 미사용쿠폰);

if(미사용쿠폰+chicken>=10) {
    let 짜투리 = 미사용쿠폰+chicken;
    console.log('짜투리: ', 짜투리);
    미사용쿠폰 += 짜투리%10 
    짜투리 = Math.floor(짜투리/10);
    신규생성쿠폰 += 짜투리
}
console.log(`미사용쿠폰: ${미사용쿠폰}, 신규생성쿠폰: ${신규생성쿠폰}, 치킨: ${chicken}`)
return 신규생성쿠폰

// 1081 -> 108개 쿠폰 신규생성, 1개 미사용, 
// 108 -> 10개 쿠폰 신규생성, 8+1개 미사용, 
// 10 -> 1개 쿠폰 신규생성, 8+1+1개 미사용
// 10 -> 1개 쿠폰 신규생성
// 신규생성 쿠폰 : 120개





}

solution(chicken)


// 풀이방법
    /*
    1. 필요한 값은 `서비스 받은 치킨의 수`이다.
    2. 분류를 해보자면 최초주문한치킨/먹은치킨/쿠폰을사용한치킨/쿠폰을사용하지못한치킨 ? -> 잘 모르겠따.
    3. 최초에 100마리를 주문했다면, 최초 서비스로 받는 치킨쿠폰이 생길 것이고, 이 시점 이후부터는 모두 `서비스 받은 치킨`에 속한다.
    4. 100주문 -> 미사용 쿠폰 10장 -> 10의 배수이므로 나눈 값을 뺌 -> 나머지 값을 다시 미사용 쿠폰에 더함
    */

// 테스트 과정
    /*
    1. 첫번째 제출시 1개의 테스트 케이스 실패(테스트 9번)
        - 
    */